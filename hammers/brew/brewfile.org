#+TITLE:  brew 配置
#+AUTHOR: 孙建康（rising.lambda）
#+EMAIL:  rising.lambda@gmail.com

#+DESCRIPTION: brew 配置文件
#+PROPERTY:    header-args        :comments org
#+PROPERTY:    header-args        :mkdirp yes
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js

*** 使用清华大学 git 镜像加速
    #+BEGIN_SRC shell :tangle no :exports code :results none
      # brew 程序本身，Homebrew/Linuxbrew 相同
      git -C "$(brew --repo)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git
      # 以下针对 mac OS 系统上的 Homebrew
      git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git
      git -C "$(brew --repo homebrew/cask)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git
      git -C "$(brew --repo homebrew/cask-fonts)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-fonts.git
      git -C "$(brew --repo homebrew/cask-drivers)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-drivers.git
    #+END_SRC

*** 默认安装的软件包
    #+BEGIN_SRC conf :tangle (m/resolve "${m/xdg.conf.d}/homebrew-bundle/Brewfile") :exports code :results none :eval never :comments link
      cask_args appdir: '/Applications'
      tap 'homebrew/cask' if OS.mac?
      tap 'homebrew/bundle'
      tap 'd12frosted/emacs-plus'

      brew "mas" if OS.mac?
      # App Store
      mas "Reeder3", id: 880001334
      mas "ReadKit", id: 588726889
      mas "Hidden Bar", id: 1452453066
      mas "SwordSoft Screenink Free", id: 953841977

      # system
      cask 'docker', greedy: true
      brew 'openjdk'
      cask 'iterm2', greedy: true
      cask 'squirrel', greedy: true
      cask 'snipaste', greedy: true
      cask 'unshaky', greedy: true # process the mac keyboard duplicate key problem
      cask 'the-unarchiver', greedy: true
      brew 'unar'
      # usb network sharing driver
      # cask 'horndis'
      brew 'ruby'
      brew 'boost'

      # ides
      cask 'clion', greedy: true, args: { appdir: "~/Applications/Versioned" }

      # virtualization

      # productivity
      cask 'alfred', greedy: true
      cask 'xmind', greedy: true
      cask 'hammerspoon', greedy: true
      cask 'appcleaner', greedy: true
      cask 'cheatsheet', greedy: true
      cask 'drawio', greedy: true

      # editor
      cask 'sublime-text', greedy: true
      brew 'emacs-plus@28', args: ["with-imagemagick", "with-native-comp"]

      # storage
      cask 'baidunetdisk', greedy: true
      cask 'yinxiangbiji', greedy: true
      # cask 'dash'
      cask 'thunder', greedy: true
      cask '1password', greedy: true
      cask 'nutstore', greedy: true
      cask 'veracrypt', greedy: true

      # broswer
      cask 'google-chrome', greedy: true

      # emacs
      cask "mactex-no-gui", greedy: true
      # terminal apps
      ## network
      brew 'inetutils' if OS.mac?
      brew 'coreutils' if OS.mac?
      brew 'nmap', greedy: true
      brew 'axel' # multiple thread downloader
      brew 'iperf'
      brew 'make'
      brew 'cmake'
      brew 'tig'
      brew 'rg'
      # html query like jq for json
      brew 'pup'
      brew 'jq'
      brew 'yq'
      brew 'autojump'
      brew 'git'
      brew 'hub' # github command line
      brew 'vim'
      brew 'zsh'
      brew 'tldr'
      brew 'zsh-completions'
      brew 'graphviz'
      brew 'tree'
      brew 'direnv'
      brew 'bat'
      brew 'eth-p/software/bat-extras'
      brew 'reattach-to-user-namespace' if OS.mac?
      brew 'tmux'
      brew 'urlview'
      brew 'tmuxinator'
      # code statictis
      brew 'cloc'
      brew 'fzf'
      brew 'watch'

      brew 'python'
      brew 'ninja'
      brew 'gcc'
      brew 'llvm'
      brew 'php'


      # ic
      brew 'icarus-verilog'
      cask 'kicad', greedy: true
      cask 'xquartz', greedy: true
      cask 'gtkwave', greedy: true

      # study
      cask 'kindle', greedy: true
      #cask 'youdaodict'

      # communication
      cask 'qq', greedy: true
      cask 'wechat', greedy: true

      # entertain
      cask 'neteasemusic', greedy: true
      cask 'qqmusic', greedy: true
      cask 'vlc', greedy: true

      # video processing
      cask 'handbrake', greedy: true  # 视屏压缩
    #+END_SRC

*** compile emacs
    #+BEGIN_SRC conf :tangle (m/resolve "${m/xdg.conf.d}/homebrew-bundle/Brewfile") :exports code :results none :eval never :comments link
      brew 'texinfo'
    #+END_SRC

*** emacs related tools
    #+BEGIN_SRC conf :tangle (m/resolve "${m/xdg.conf.d}/homebrew-bundle/Brewfile") :exports code :results none :eval never :comments link
      brew 'w3m'
    #+END_SRC
    
*** emacs email package
    #+BEGIN_SRC conf :tangle (m/resolve "${m/xdg.conf.d}/homebrew-bundle/Brewfile") :exports code :results none :eval never :comments link
      brew 'isync'
      brew 'notmuch'
      brew 'msmtp'
    #+END_SRC
    
    #+BEGIN_SRC shell :eval (or (and (eq m/os 'macos) "yes") "never") :shebang #!/bin/bash :exports none :tangle no :results output silent :noweb yes :prologue "exec 2>&1" :epilogue ":" :comments link
      #brew bundle --global
    #+END_SRC
