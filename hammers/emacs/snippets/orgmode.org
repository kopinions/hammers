#+TITLE:  orgmode 代码片段配置
#+AUTHOR: 孙建康（rising.lambda）
#+EMAIL:  rising.lambda@gmail.com

#+DESCRIPTION: A literate programming version of yasnippet orgmode config
#+PROPERTY:    header-args        :mkdirp yes
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js

*** 通用代码段
    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/src") :mkdirp yes :eval never :exports code
      # -*- mode: snippet -*-
      # name: 
      # key: <s
      # --
      ,#+BEGIN_SRC $1 :eval never :exports code :noweb yes :mkdirp yes
      $0
      ,#+END_SRC
    #+END_SRC
*** shell 代码段

    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/shell") :mkdirp yes :eval never :exports code
      # -*- mode: snippet -*-
      # name: shell
      # key: <sh
      # --
      ,#+BEGIN_SRC shell :eval never :exports code :noweb yes :comments link :mkdirp yes :prologue "exec 2>&1" :epilogue ":"
      $0
      ,#+END_SRC
    #+END_SRC

*** elisp 代码段

    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/elisp") :mkdirp yes
      # -*- mode: snippet -*-
      # name: lisp
      # key: <elisp
      # --
      ,#+BEGIN_SRC elisp :eval never :exports code :noweb yes :mkdirp yes
      $0
      ,#+END_SRC
    #+END_SRC

*** conf 代码段
    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/conf") :mkdirp yes
      # -*- mode: snippet -*-
      # name: conf
      # key: <conf
      # --
      ,#+BEGIN_SRC conf :eval never :exports code :noweb yes
      $0
      ,#+END_SRC
    #+END_SRC

*** graphviz 代码段
    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/dot") :mkdirp yes
      # -*- mode: snippet -*-
      # name: dot
      # expand-env: ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
      # key: <dot
      # --
      ,#+HEADER: :file $1
      ,#+BEGIN_SRC dot :post attr(width="$2", data=*this*) :results drawer :mkdirp yes
        digraph G {
          dpi = 180
          $0
        }
      ,#+END_SRC
    #+END_SRC

*** blog front matter 配置

    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/front-matter") :mkdirp yes
      # -*- mode: snippet -*-
      # name: front-mater
      # key: <front
      # expand-env: ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
      # --
      ,#+TITLE: $1
      ,#+AUTHOR: 孙建康（rising.lambda）
      ,#+EMAIL:  rising.lambda@gmail.com
      ,#+DATE: `(format-time-string "%Y-%m-%d")`$0
      ,#+UPDATED: `(format-time-string "%Y-%m-%d")`$0
      ,#+LAYOUT: post
      ,#+EXCERPT:  $3
      ,#+DESCRIPTION: $4
      ,#+TAGS: $5
      ,#+CATEGORIES: $6
      ,#+PROPERTY:    header-args        :comments org
      ,#+PROPERTY:    header-args        :mkdirp yes
      ,#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil \n:nil ^:nil *:t <:t -:t f:t |:t ::t
      ,#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
      ,#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
      ,#+BIND:        org-preview-latex-image-directory "$7"
      ,#+OPTIONS:     tex:imagemagick

      ,#+LaTeX_CLASS: article
      ,#+LaTeX_CLASS_OPTIONS: [12pt]
      ,#+LaTeX_CLASS_OPTIONS: [koma,a5paper,landscape,twocolumn,utopia,10pt,listings-sv,microtype,paralist]
      # No need for a table of contents, unless your paper is quite long.
      # Use fancy looking fonts. If you don't have MinionPro installed,
      # a good alternative is the Palatino-style pxfonts.
      # See: [[http://www.tug.dk/FontCatalogue/pxfonts/][http://www.tug.dk/FontCatalogue/pxfonts/]]
      ,#+LATEX_HEADER:\usepackage{xeCJK}
      ,#+LATEX_HEADER: \usepackage[scaled=.875]{inconsolata}
      ,#+LATEX_HEADER: \usepackage[T1]{fontenc}
      ,#+LATEX_HEADER: \usepackage[scaled]{beraserif}
      ,#+LATEX_HEADER: \usepackage[scaled]{berasans}
      ,#+LATEX_HEADER: \usepackage[scaled]{beramono}
      # Set the spacing to double, as required in most papers.
      ,#+LATEX_HEADER: \usepackage{setspace}
      ,#+LATEX_HEADER: \doublespacing
      # Fix the margins
      ,#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
      # This line makes lists work better:
      # It eliminates whitespace before/within a list and pushes it tt the left margin
      ,#+LATEX_HEADER: \usepackage{enumitem}
      ,#+LATEX_HEADER: \setlist[enumerate,itemize]{noitemsep,nolistsep,leftmargin=*}
      # I always include this for my bibliographies
      ,#+LATEX_HEADER: \usepackage[notes,isbn=false,backend=biber]{biblatex-chicago}
      ,#+NAME: attr
      ,#+BEGIN_SRC sh :var data="" :var width="\\textwidth" :results output :exports none
        echo "#+ATTR_LATEX: :width $width"
        echo "#+ATTR_ORG: :width $width"
        echo "$data"
      ,#+END_SRC
    #+END_SRC

    $0
    #+END_SRC
    
*** verilog 代码段
    #+BEGIN_SRC text :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/verilog") :mkdirp yes
      # -*- mode: snippet -*-
      # name: verilog
      # key: <veri
      # expand-env: ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
      # --
      ,#+BEGIN_SRC verilog :exports code :eval never :noweb yes :mkdirp yes
      module $1($2)
        always @*
        begin
          $0
        end
        always @(posedge clk)
        begin
        end
      endmodule
      ,#+END_SRC
    #+END_SRC
    
*** latex
    #+BEGIN_SRC org :tangle (m/resolve "${m/xdg.conf.d}/emacs/snippets/org-mode/latex") :mkdirp yes
      # -*- mode: snippet -*-
      # name: latex
      # key: <latex
      # --
      ,#+HEADER: :imagemagick yes :iminoptions -density 300 -trim -background '#$1'  :imoutoptions -opaque none  -density 300 -quality 100 -flatten -trim  -sharpen 0x1.0 -geometry $2
      ,#+HEADER: :fit yes
      ,#+BEGIN_SRC latex  :file $3 :exports results :noweb yes :mkdirp yes
        $0
      ,#+END_SRC
    #+END_SRC
