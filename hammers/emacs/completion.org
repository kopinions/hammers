#+TITLE:  补全配置
#+AUTHOR: 孙建康（rising.lambda）
#+EMAIL:  rising.lambda@gmail.com

#+DESCRIPTION: A literate programming version of my Emacs Initialization script, loaded by the .emacs file.
#+PROPERTY:    header-args        :results silent   :eval no-export   :comments org
#+PROPERTY:    header-args        :mkdirp yes
#+PROPERTY:    header-args:elisp  :tangle "~/.emacs.d/lisp/init-completion.el"
#+PROPERTY:    header-args:shell  :tangle no
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js

** company
#+BEGIN_SRC elisp
(use-package company
  :diminish company-mode
  :defines
  (company-dabbrev-ignore-case company-dabbrev-downcase)
  :bind
  (:map company-active-map
   ("C-n" . company-select-next)
   ("C-p" . company-select-previous)
   ("<tab>" . company-complete-common-or-cycle)
   :map company-search-map
   ("C-p" . company-select-previous)
   ("C-n" . company-select-next))
  :custom
  (company-idle-delay 0)
  (company-echo-delay 0)
  (company-minimum-prefix-length 1)
  :config
  (global-company-mode)
  (use-package company-posframe
    :hook
    (company-mode . company-posframe-mode))
  (use-package company-flx
    :requires company
    :config
    (company-flx-mode +1))
  (use-package company-quickhelp
    :defines company-quickhelp-delay
    :bind
    (:map company-active-map
      ("M-h" . company-quickhelp-manual-begin))
    :hook
    (global-company-mode . company-quickhelp-mode)
    :custom
    (company-quickhelp-delay 0.8)))
#+END_SRC

** yasnippet

#+BEGIN_SRC elisp
(use-package yasnippet
  :ensure t
  :diminish yas-minor-mode
  :config
  (use-package yasnippet-snippets
    :ensure t
    :requires yasnippet)
  (yas-reload-all)
  (yas-global-mode t)
  :custom (yas-snippet-dirs '("~/.emacs.d/snippets")))
#+END_SRC

** provide
#+BEGIN_SRC elisp
(provide 'init-completion)
#+END_SRC
