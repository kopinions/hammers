#+TITLE:  版本管理
#+AUTHOR: 孙建康（rising.lambda）
#+EMAIL:  rising.lambda@gmail.com

#+DESCRIPTION: A literate programming version of my Emacs Initialization script, loaded by the .emacs file.
#+PROPERTY:    header-args        :mkdirp yes
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js

*** git highlight mode
    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (use-package git-gutter
	:after magit
	:custom
	(git-gutter:modified-sign "~")
	(git-gutter:added-sign    "+")
	(git-gutter:deleted-sign  "-")
	:custom-face
	(git-gutter:modified ((t (:foreground "#f1fa8c" :background "#f1fa8c"))))
	(git-gutter:added    ((t (:foreground "#50fa7b" :background "#50fa7b"))))
	(git-gutter:deleted  ((t (:foreground "#ff79c6" :background "#ff79c6"))))
	:config
	(global-git-gutter-mode +1)
	:hook
	(magit-post-refresh . git-gutter:update-all-windows)
	(magit-post-commit . git-gutter:update-all-windows)
	(magit-refresh-buffer . git-gutter:update-all-windows))
    #+END_SRC

*** transient
    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (use-package transient
        :custom
        (transient-levels-file (expand-file-name "transient/levels.el" m/emacs.state.d))
        (transient-values-file (expand-file-name "transient/values.el" m/emacs.state.d))
        (transient-history-file (expand-file-name "transient/history.el" m/emacs.state.d)))
    #+END_SRC


*** magit
    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (define-derived-mode commit-msg-mode text-mode "Commit Msg")
      (use-package magit
	:after (yasnippet yasnippet-snippets)
	:custom
	(magit-diff-refine-hunk t)
	:bind
	(("C-x g" . magit-status))
	:config
	(use-package fullframe
	  :config
	  (fullframe magit-status magit-mode-quit-window))
	:hook
	(git-commit-mode . commit-msg-mode)
	(git-commit-mode . (lambda ()
			     (yas-activate-extra-mode 'commit-msg-mode))))

      (use-package magit-todos)
    #+END_SRC
*** git config file edit support
    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (use-package git-modes)
    #+END_SRC

*** other
    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (use-package git-messenger
	:bind ("C-x v p" . git-messenger:popup-message)
	:config
	(setq git-messenger:show-detail t))

      (use-package git-timemachine
	:config
	(defalias 'tm 'git-timemachine))
    #+END_SRC

    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (use-package yagist)
    #+END_SRC

*** export 
    #+BEGIN_SRC elisp :eval never :exports code :tangle (m/resolve "${m/xdg.conf.d}/emacs/lisp/init-vcs.el") :comments link
      (provide 'init-vcs)
    #+END_SRC
